in computing, a process is an instance of a computer program that is being executed. it contains the program code and its current activity. depending on the operating system (os), a process may be made up of multiple threads of execution that execute instructions concurrently. a computer program is a passive collection of instructions, while a process is the actual execution of those instructions. several processes may be associated with the same program; for example, opening up several instances of the same program often means more than one process is being executed. multitasking is a method to allow multiple processes to share processors (cpus) and other system resources. each cpu executes a single task at a time. however, multitasking allows each processor to switch between tasks that are being executed without having to wait for each task to finish. depending on the operating system implementation, switches could be performed when tasks perform input/output operations, when a task indicates that it can be switched, or on hardware interrupts. a common form of multitasking is time-sharing. time-sharing is a method to allow fast response for interactive user applications. in time-sharing systems, context switches are performed rapidly, which makes it seem like multiple processes are being executed simultaneously on the same processor. this seeming execution of multiple processes simultaneously is called concurrency. for security and reliability, most modern operating systems prevent direct communication between independent processes, providing strictly mediated and controlled inter-process communication functionality.